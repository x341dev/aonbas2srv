name: Build and Release JAR

on:
  push:
    branches:
      - main

env:
  JAVA_VERSION: '21'
  GRADLE_BUILD_TASK: 'jar'

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew ${{ env.GRADLE_BUILD_TASK }} -x test

      - name: Get JAR file name and version
        id: get_jar_info
        run: |
          JAR_PATH=$(find build/libs/ -name "*.jar" -type f | head -n 1)
          JAR_NAME=$(basename $JAR_PATH)
          VERSION=$(echo $JAR_NAME | sed -E 's/.*-([0-9]+\.[0-9]+\.[0-9]+)\.jar/\1/')
          VERSION_TAG="v$VERSION"

          echo "JAR_PATH=$JAR_PATH" >> $GITHUB_OUTPUT
          echo "JAR_NAME=$JAR_NAME" >> $GITHUB_OUTPUT
          echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_OUTPUT

      - name: Determine release type
        id: release_type
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          CURRENT_VERSION="${{ steps.get_jar_info.outputs.VERSION_TAG }}"
          CURRENT_VERSION="${CURRENT_VERSION#v}"

          if [ -z "$PREV_TAG" ]; then
            RELEASE_TYPE="major"
          else
            PREV_VERSION="${PREV_TAG#v}"
            IFS='.' read -r PREV_MAJOR PREV_MINOR PREV_BUILD <<< "$PREV_VERSION"
            IFS='.' read -r CUR_MAJOR CUR_MINOR CUR_BUILD <<< "$CURRENT_VERSION"

            if [ "$CUR_MAJOR" -gt "$PREV_MAJOR" ]; then
              RELEASE_TYPE="major"
            elif [ "$CUR_MINOR" -gt "$PREV_MINOR" ]; then
              RELEASE_TYPE="minor"
            else
              RELEASE_TYPE="patch"
            fi
          fi

          echo "Detected release type: $RELEASE_TYPE"
          echo "RELEASE_TYPE=$RELEASE_TYPE" >> $GITHUB_OUTPUT

      - name: Create GitHub Release with Changelog
        if: ${{ steps.release_type.outputs.RELEASE_TYPE == 'minor' || steps.release_type.outputs.RELEASE_TYPE == 'major' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_jar_info.outputs.VERSION_TAG }}
          name: Release ${{ steps.get_jar_info.outputs.VERSION_TAG }}
          generate_release_notes: true
          files: ${{ steps.get_jar_info.outputs.JAR_PATH }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
